{"version":3,"sources":["store.js","reducers/userReducers.js","constants/userConstants.js","reducers/adReducers.js","constants/adConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Post.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/adActions.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserEditScreen.js","screens/PostScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userDetails","user","userUpdateProfile","success","userDelete","userUpdate","postCreate","posts","postList","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","name","Item","onClick","removeItem","Footer","Row","Col","Post","post","Card","Img","src","image","Body","Title","as","Text","category","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","HomeScreen","console","log","useEffect","_id","map","product","key","sm","md","lg","xl","FormContainer","xs","LoginScreen","location","history","useState","email","setEmail","password","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","setItem","stringify","login","Group","controlId","Label","Control","placeholder","value","onChange","target","Button","RegisterScreen","setName","confirmPassword","setConfirmPassword","phone","setPhone","setMessage","register","ProfileScreen","mobile","setMobile","put","updateUserProfile","UserEditScreen","match","userId","params","isAdmin","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","Check","label","checked","PostScreen","setTitle","setCategory","setPrice","setImage","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","createPost","File","custom","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e677ea5c.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport { createAdReducer, getAdReducer } from './reducers/adReducers'\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n\n  postCreate: createAdReducer,\n  postList: getAdReducer,\n\n\n})\n\n\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store;\n\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n    CREATE_AD_REQUEST,\n    CREATE_AD_SUCCESS,\n    CREATE_AD_FAIL,\n    GET_AD_REQUEST,\n    GET_AD_SUCCESS,\n    GET_AD_FAIL\n\n} from '../constants/adConstants'\n\n\n\n\n\nexport const createAdReducer = (state = {}, action) => {\n    switch (action.type) {\n      case CREATE_AD_REQUEST:\n        return { loading: true }\n      case CREATE_AD_SUCCESS:\n        return { loading: false, posts: action.payload }\n      case CREATE_AD_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n  }\n\n  export const getAdReducer = (state = {}, action) => {\n    switch (action.type) {\n      case GET_AD_REQUEST:\n        return { loading: true }\n      case GET_AD_SUCCESS:\n        return { loading: false, posts: action.payload }\n      case GET_AD_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n  }","export const CREATE_AD_REQUEST = 'CREATE_AD_REQUEST'\nexport const CREATE_AD_SUCCESS = 'CREATE_AD_SUCCESS'\nexport const CREATE_AD_FAIL = 'CREATE_AD_FAIL'\n\nexport const GET_AD_REQUEST = 'GET_AD_REQUEST'\nexport const GET_AD_SUCCESS = 'GET_AD_SUCCESS'\nexport const GET_AD_FAIL = 'GET_AD_FAIL'\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\n// import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  // dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password , phone) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password , phone },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Advertisment</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/'>\n                <Nav.Link>\n                  <i className='fas fa-home'></i> Home\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/createPost'>\n                  <NavDropdown.Item>Create New Ad</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; advertisment</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\nconst Post = ({ post }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n        <Card.Img src={post.image} variant='top' />\n      \n\n      <Card.Body>\n          <Card.Title as='h5'>\n            Title : {post.title}\n          </Card.Title>\n\n        <Card.Text as='h6'>\n        Category : {post.category}\n        </Card.Text>\n\n        <Card.Text as='h6'> Price : ${post.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Post from '../components/Post'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getPost } from '../actions/adActions'\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n\n  const postList = useSelector((state) => state.postList)\n  const {userInfo} = useSelector((state) => state.userLogin)\n\n  const { loading, error, posts } = postList\n  console.log(\"proidyuct -----\",posts)\n\n  useEffect(() => {\n    dispatch(getPost(userInfo))\n  }, [dispatch])\n\n\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        \n          userInfo ? \n          <>\n          <h1>Latest Active ADS</h1>\n          <Row>\n          {posts && posts.map((product) => (\n            <Col key={product._id} sm={12} md={12} lg={12} xl={12}>\n\n              <Post post={product} />\n            </Col>\n          ))}\n        </Row></>: <Row><h5>Please! Login to see the ads</h5></Row>\n        \n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import { CREATE_AD_FAIL, CREATE_AD_REQUEST, CREATE_AD_SUCCESS, GET_AD_FAIL, GET_AD_REQUEST, GET_AD_SUCCESS } from '../constants/adConstants'\nimport axios from 'axios';\n\n\n\n\nexport const createPost = (id , title, category, price, image) => async (dispatch,getState) => {\n  console.log(\"data ---\",id,title, category, price, image)\n    try {\n      dispatch({\n        type: CREATE_AD_REQUEST,\n      })\n\n      const {\n        userLogin: { userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.post('/api/post/create',{ id, title, category, price, image },config);\n  \n      dispatch({\n        type: CREATE_AD_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: CREATE_AD_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }\n\n\n\n\n\n  export const getPost = (user) => async (dispatch,getState) => {\n    console.log(\"in get post route\")\n    try {\n      dispatch({\n        type: GET_AD_REQUEST,\n      })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(\n        `/api/post/${user._id}`,config\n      )\n  \n      dispatch({\n        type: GET_AD_SUCCESS,\n        payload: data,\n      })\n  \n    } catch (error) {\n      dispatch({\n        type: GET_AD_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      })\n    }\n  }","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [phone, setPhone] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password , phone))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='phone'>\n          <Form.Label>Mobile No.</Form.Label>\n          <Form.Control\n            type='number'\n            placeholder='Enter phone no'\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { Link } from 'react-router-dom'\nimport FormContainer from '../components/FormContainer'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [mobile, setMobile] = useState('')\n  const [password, setPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setMobile(user.phone)\n        setPassword(user.password)\n\n      }\n    }\n  }, [dispatch, history, userInfo, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n      dispatch(updateUserProfile({ id: user._id, name, email, mobile,password }))\n  }\n\n  return (\n    <>\n    <Link to='/' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n    <FormContainer>\n      <Col md={12}>\n        <h2>Update Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label>Mobile No.</Form.Label>\n            <Form.Control\n              type='tel'\n              placeholder='Enter mobile no'\n              value={mobile}\n              onChange={(e) => setMobile(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n    </FormContainer>\n    </>\n  )\n}\n\nexport default ProfileScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer';\nimport axios from 'axios';\nimport { createPost } from '../actions/adActions'\n\n\nconst PostScreen = ({ match, history }) => {\n\n    const [title,setTitle] = useState('');\n    const [category,setCategory] = useState('');\n    const [price,setPrice] = useState('');\n    const [image,setImage] = useState('');\n    const [uploading, setUploading] = useState(false);\n    const dispatch = useDispatch();\n\n    const {userInfo} = useSelector((state) => state.userLogin)\n\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0];\n        const formData = new FormData();\n        formData.append('image', file);\n        setUploading(true);\n        try {\n            const config = {\n                headers: { 'Content-Type': 'multipart/form-data' }\n            }\n\n            const { data } = await axios.post('/api/upload', formData, config);\n            setImage(data);\n            setUploading(false);\n        } catch (error) {\n            console.error(error)\n            setUploading(false);\n\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createPost( userInfo._id, title, category, price, image ))\n        history.push('/')\n    }\n\n    return (\n        <>\n            <Link to='/' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n                <h1>Create New Ad</h1>\n                <Form onSubmit={submitHandler}>\n                                <Form.Group controlId='name'>\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control\n                                        type='text'\n                                        placeholder='Enter title'\n                                        value={title}\n                                        onChange={(e) => setTitle(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n                                <Form.Group controlId='price'>\n                                    <Form.Label>Price</Form.Label>\n                                    <Form.Control\n                                        type='number'\n                                        placeholder='Enter Price'\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='category'>\n                                    <Form.Label>Category</Form.Label>\n                                    <Form.Control\n                                        type='text'\n                                        placeholder='Enter Category'\n                                        value={category}\n                                        onChange={(e) => setCategory(e.target.value)}\n                                    ></Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='image'>\n                                    <Form.Label>Image</Form.Label>\n                                    <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler}></Form.File>\n                                    {uploading && <Loader />}\n                                </Form.Group>\n\n                                <Button type='submit' variant='primary'>\n                                    Update\n                            </Button>\n                            </Form>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default PostScreen\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport PostScreen from './screens/PostScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          \n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route path='/createPost' component={PostScreen} />\n          \n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}